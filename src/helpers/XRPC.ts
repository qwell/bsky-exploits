type Query = 'com.atproto.repo.getRecord' | 'com.atproto.server.getSession';
type Procedure =
  | 'com.atproto.repo.applyWrites'
  | 'com.atproto.repo.createRecord'
  | 'com.atproto.repo.deleteRecord'
  | 'com.atproto.repo.putRecord';

const baseURI = 'https://bsky.social/xrpc';

export async function query(lexiconId: Query, authToken: string, { ...args }): Promise<unknown> {
  const result = await fetch(new URL(`${baseURI}/${lexiconId}?${new URLSearchParams(args).toString()}`), {
    method: 'GET',
    headers: new Headers({
      Authorization: `Bearer ${authToken}`,
      'Content-Type': 'application/json',
    }),
  });

  if (result.status === 200) {
    return result.json();
  } else {
    throw new Error(`Uh oh!  Got ${result.status}`);
  }
}

export async function procedure<T>(lexiconId: Procedure, authToken: string, args: T): Promise<unknown> {
  const result = await fetch(new URL(`${baseURI}/${lexiconId}`), {
    method: 'POST',
    headers: new Headers({
      Authorization: `Bearer ${authToken}`,
      'Content-Type': 'application/json',
    }),
    body: JSON.stringify(args),
  });

  if (result.status === 200) {
    return result.json();
  } else {
    throw new Error(`Uh oh!  Got ${result.status}`);
  }
}
